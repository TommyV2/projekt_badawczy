version: '3.9'
services:
  db:
    image: postgres:15.0-alpine
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: exampledb
    volumes:
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d exampledb -U docker']
      interval: 5s
    networks:
      - appnet

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./php_laravel/badawczy:/var/www
      - ./php_laravel/nginx:/etc/nginx/conf.d/
    networks:
      - appnet

  laravel:
    build: ./php_laravel/badawczy
    restart: unless-stopped
    networks:
      - appnet

  kotlin_ktor:
    build: ./kotlin_ktor
    ports:
      - '8001:8080'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
  julia_genie:
    build: ./julia_genie
    ports:
      - '8002:8000'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
  js_express:
    build: ./js_express
    ports:
      - '8003:3000'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
  python_fastapi:
    build: ./python_fastapi
    ports:
      - '8004:8004'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
  java_spring:
    build: ./java_spring
    ports:
      - '8006:80'
    environment:
      - SERVER_PORT=80
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
  rust_rocket:
    build: ./rust_rocket
    command: bash -c "cargo run"
    ports:
      - '8007:6666'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
  aspnetapp:
    build: ./aspnetapp
    ports:
      - '8008:80'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
  go_gin:
    build: ./go_gin
    ports:
      - '8009:8000'
    depends_on:
      - db
    volumes:
      - ./go_gin:/app
    networks:
      - appnet 
  ruby_on_rails:
    build: ./ruby_on_rails
    ports:
      - '8010:3001'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet
networks:
  appnet:
    driver: bridge
